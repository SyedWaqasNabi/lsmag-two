<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 */


namespace Ls\Omni\Client\Ecommerce\Entity;

use Ls\Omni\Client\Ecommerce\Entity\Enum\LocationType;
use Ls\Omni\Exception\InvalidEnumException;

class Image
{

    /**
     * @property boolean $Del
     */
    protected $Del = null;

    /**
     * @property string $Id
     */
    protected $Id = null;

    /**
     * @property string $Image64
     */
    protected $Image64 = null;

    /**
     * @property string $Location
     */
    protected $Location = null;

    /**
     * @property LocationType $LocationType
     */
    protected $LocationType = null;

    /**
     * @param boolean $Del
     * @return $this
     */
    public function setDel($Del)
    {
        $this->Del = $Del;
        return $this;
    }

    /**
     * @return boolean
     */
    public function getDel()
    {
        return $this->Del;
    }

    /**
     * @param string $Id
     * @return $this
     */
    public function setId($Id)
    {
        $this->Id = $Id;
        return $this;
    }

    /**
     * @return string
     */
    public function getId()
    {
        return $this->Id;
    }

    /**
     * @param string $Image64
     * @return $this
     */
    public function setImage64($Image64)
    {
        $this->Image64 = $Image64;
        return $this;
    }

    /**
     * @return string
     */
    public function getImage64()
    {
        return $this->Image64;
    }

    /**
     * @param string $Location
     * @return $this
     */
    public function setLocation($Location)
    {
        $this->Location = $Location;
        return $this;
    }

    /**
     * @return string
     */
    public function getLocation()
    {
        return $this->Location;
    }

    /**
     * @param LocationType|string $LocationType
     * @return $this
     * @throws InvalidEnumException
     */
    public function setLocationType($LocationType)
    {
        if ( LocationType::isValid( $LocationType) ) 
            $this->LocationType = new LocationType( $LocationType );
        elseif ( LocationType::isValidKey( $LocationType) ) 
            $this->LocationType = new LocationType( constant( "LocationType::$LocationType" ) );
        else 
            throw new InvalidEnumException();
        return $this;
    }

    /**
     * @return LocationType
     */
    public function getLocationType()
    {
        return $this->LocationType;
    }


}

