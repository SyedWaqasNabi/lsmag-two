<?php
/**
 * THIS IS AN AUTOGENERATED FILE
 * DO NOT MODIFY
 */


namespace Ls\Omni\Client\Loyalty\Entity;

use Ls\Omni\Client\Loyalty\Entity\Enum\SearchType;
use Ls\Omni\Exception\InvalidEnumException;
use Ls\Omni\Client\IRequest;

class Search implements IRequest
{

    /**
     * @property string $contactId
     */
    protected $contactId = null;

    /**
     * @property string $search
     */
    protected $search = null;

    /**
     * @property SearchType $searchTypes
     */
    protected $searchTypes = null;

    /**
     * @param string $contactId
     * @return $this
     */
    public function setContactId($contactId)
    {
        $this->contactId = $contactId;
        return $this;
    }

    /**
     * @return string
     */
    public function getContactId()
    {
        return $this->contactId;
    }

    /**
     * @param string $search
     * @return $this
     */
    public function setSearch($search)
    {
        $this->search = $search;
        return $this;
    }

    /**
     * @return string
     */
    public function getSearch()
    {
        return $this->search;
    }

    /**
     * @param SearchType|string $searchTypes
     * @return $this
     * @throws InvalidEnumException
     */
    public function setSearchTypes($searchTypes)
    {
        if ( SearchType::isValid( $searchTypes) ) 
            $this->searchTypes = new SearchType( $searchTypes );
        elseif ( SearchType::isValidKey( $searchTypes) ) 
            $this->searchTypes = new SearchType( constant( "SearchType::$searchTypes" ) );
        else 
            throw new InvalidEnumException();
        return $this;
    }

    /**
     * @return SearchType
     */
    public function getSearchTypes()
    {
        return $this->searchTypes;
    }


}

